---
title: "Evaluation of the probability of causation approach for lung cancer: Scoping review"
subtitle: "Deduplication of Studies"
author: 
  - name: Javier Mancilla Galindo
    affiliation: Institute for Risk Assessment Sciences, Utrecht University, Utrecht, The Netherlands
    orcid: 0000-0002-0718-467X
    email: j.mancillagalindo@uu.nl
keywords: ["probability of causation", "assigned share", "lung cancer", "causality", "scoping review"]
date: today
execute: 
  echo: false
  warning: false
toc: true
toc-depth: 1
format:
  html:
    toc: true
  docx:
    toc: false
    reference-doc: ../docs/manuscript/template.docx
    link-citations: true
  pdf:
    toc: false
    documentclass: scrartcl
zotero: probability-of-causation
bibliography: ../docs/manuscript/references.bib
csl: ../docs/manuscript/american-medical-association.csl
editor: source
---

```{r}
#| label: directories
#| include: false

# Create directories for sub-folders  
inputfolder <- "../data/raw"
psfolder <- "../data/processed"
tempfolder <- "../data/temp"
figfolder <- "../results/output_figures"
tabfolder <- "../results/output_tables"

dir.create(inputfolder, showWarnings = FALSE)
dir.create(psfolder, showWarnings = FALSE)
dir.create(tempfolder, showWarnings = FALSE)
dir.create(figfolder, showWarnings = FALSE)
dir.create(tabfolder, showWarnings = FALSE)
```

```{r}
#| label: packages
#| include: false 

if (!require("pacman", quietly = TRUE)) {
  install.packages("pacman")
}

pacman::p_load(
  devtools,         # Used to install packages from GitHub.
  tidyverse,        # Used for basic data handling and visualization.
  overviewR,        # Used to check missing data.
  gt,               # Used to print html tables.  
  report            # Used to cite packages used in this session.   
)

pacman::p_load_gh("camaradesuk/ASySD")  # Used to deduplicate studies

```

```{r}
#| label: embase data

# Columns to select 
columns <- c("record_id", "author", "year", "journal", "doi", "title", "pages",
             "volume", "number", "abstract", "isbn", "label", "source")

# Load embase data 
embase_lung_cancer <- load_search(
  path = paste0(inputfolder, "/2024_12_02_EMBASE_PoC_Lung_Cancer.ris"),
  method = "ris"
  ) %>% 
  mutate(
    abstract = N2,
    author = A1,
    number = issue,
    isbn = issn,
    source = "embase"
  ) %>% 
  select(all_of(columns))

embase_cancer <- load_search(
  path = paste0(inputfolder, "/2024_12_02_EMBASE_PoC_Cancer.ris"),
  method = "ris"
  ) %>% 
  mutate(
    abstract = N2,
    author = A1,
    number = issue,
    isbn = issn,
    source = "embase"
  ) %>% 
  select(all_of(columns))
```

```{r}
#| label: pubmed data

# Load pubmed data 
pubmed_cancer <- load_search(
  path = paste0(inputfolder, "/2024-12-03_PubMed_PoC_Cancer.csv"),
  method = "csv"
  ) %>% 
  mutate(
    isbn = issn,
    source = "pubmed"
  ) %>% 
  select(all_of(columns))

pubmed_lung_cancer <- load_search(
  path = paste0(inputfolder, "/2024-12-03_PubMed_PoC_Lung_Cancer.csv"),
  method = "csv"
  ) %>% 
  mutate(
    isbn = issn,
    source = "pubmed"
  ) %>% 
  select(all_of(columns))
```

```{r}
#| label: OpenAlex

openalex_cancer <- load_search(
  path = paste0(inputfolder, "/2024-12-03_OpenAlex_PoC_Cancer.csv"),
  method = "csv"
  ) %>% 
  mutate(
    doi = doi %>% str_replace("https://doi.org/", ""),
    year = as.character(publication_year),
    author = authorships.raw_author_name %>% str_replace_all("\\|", ", "),
    journal = primary_location.source.display_name,
    volume = biblio.volume,
    number = biblio.issue,
    pages = paste0(biblio.first_page, "-", biblio.last_page),
    record_id = id,
    isbn = primary_location.source.issn %>% str_replace_all("\\|", " "),
    source = "openalex"
  ) %>% 
  select(all_of(columns))

openalex_lung_cancer <- load_search(
  path = paste0(inputfolder, "/2024-12-03_OpenAlex_PoC_Lung_Cancer.csv"),
  method = "csv"
  ) %>% 
  mutate(
    doi = doi %>% str_replace("https://doi.org/", ""),
    year = as.character(publication_year),
    author = authorships.raw_author_name %>% str_replace_all("\\|", ", "),
    journal = primary_location.source.display_name,
    volume = biblio.volume,
    number = biblio.issue,
    pages = paste0(biblio.first_page, "-", biblio.last_page),
    record_id = id,
    isbn = primary_location.source.issn %>% str_replace_all("\\|", " "),
    source = "openalex"
  ) %>% 
  select(all_of(columns))
```

There are a total of `r count(embase_lung_cancer)` records in EMBASE for lung cancer and `r count(embase_cancer)` records for all types of cancer; `r count(pubmed_lung_cancer)` records in PubMed for lung cancer and `r count(pubmed_cancer)` records for all types of cancer; and `r count(openalex_lung_cancer)` records in OpenAlex for lung cancer and `r count(openalex_cancer)` records for all types of cancer.

A plot of missing data for corroboration before deduplication is shown in the Figure. Missing data should be lower than 100% for all variables, except for `record_id` and `label`, which are optional.

```{r}
#| label: missing_embase
#| fig-cap: 
#|   - "EMBASE: Lung Cancer"
#|   - "EMBASE: Cancer"
#|   - "PubMed: Lung Cancer"
#|   - "PubMed: Cancer"
#|   - "OAlex: Lung Cancer"
#|   - "OAlex: Cancer"
#| layout-ncol: 2

overview_na(embase_lung_cancer)
overview_na(embase_cancer)
overview_na(pubmed_lung_cancer)
overview_na(pubmed_cancer)
overview_na(openalex_lung_cancer)
overview_na(openalex_cancer)
```


```{r}
#| label: merge
# Bind Embase and PubMed 
records_lung_cancer <- bind_rows(
  embase_lung_cancer, 
  pubmed_lung_cancer,
  openalex_lung_cancer
  )

records_cancer <- bind_rows(
  embase_cancer, 
  pubmed_cancer,
  openalex_cancer
  )
```

There are a total of `r count(records_lung_cancer)` records for lung cancer and `r count(records_cancer)` records for all types of cancer. These will be deduplicated using the Automated Systematic Search Deduplicator (ASySD).[@ASySD2023]

```{r}
#| label: deduplication

# Deduplicate lung cancer studies
lung_cancer_deduplicated <- dedup_citations(records_lung_cancer, keep_source = "pubmed")
lung_cancer_unique <- lung_cancer_deduplicated$unique

# Deduplicate cancer studies
cancer_deduplicated <- dedup_citations(records_cancer, keep_source = "pubmed")
cancer_unique <- cancer_deduplicated$unique

```

After deduplication, there are a total of `r count(lung_cancer_unique)` studies for the lung cancer search and `r count(cancer_unique)` records for all types of cancer. However, there are remaining potentially duplicated items to review manually: `r lung_cancer_unique %>% count(doi) %>% filter(n > 1) %>% count()` repeated doi for lung cancer and `r cancer_unique %>% count(doi) %>% filter(n > 1) %>% count()` repeated doi for all types of cancer. I will add a label for manual review

```{r}
#| label: manual_review

# Add label for manual review

lung_cancer_unique <- lung_cancer_unique %>% 
  mutate(
    label = ifelse(duplicated(doi), "manual_review", label)
    )

cancer_unique <- cancer_unique %>%
  mutate(
    label = ifelse(duplicated(doi), "manual_review", label)
    )
```

```{r}
# Save lung cancer data 
write.csv(
  lung_cancer_unique, 
  paste0(psfolder,"/",lubridate::today(),"_search_PoC_Lung_Cancer_deduplicated.csv"),
  row.names = FALSE
  )

# Save cancer data
write.csv(
  cancer_unique,
  paste0(psfolder,"/",lubridate::today(),"_search_PoC_Cancer_deduplicated.csv"),
  row.names = FALSE
  )
```

{{< pagebreak >}}

# References

::: {#refs}
:::

{{< pagebreak >}}

# Session Information

```{r}
#| label: session
# remove clutter
session <- sessionInfo()
session$BLAS <- NULL
session$LAPACK <- NULL
session$loadedOnly <- NULL
# write log file
writeLines(
  capture.output(print(session, locale = FALSE)),
  paste0("sessions/",lubridate::today(), "_deduplication.txt")
)                                   

session
```

# Package References

```{r}
#| output: asis
report::cite_packages(session)
```

```{r}
#| include: false

# Run this chunk if you wish to clear your environment and unload packages.

pacman::p_unload(negate = TRUE)

rm(list = ls())
```
